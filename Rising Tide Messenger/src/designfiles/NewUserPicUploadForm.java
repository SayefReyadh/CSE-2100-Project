/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package designfiles;

import clientproject.ClientProject;
import java.awt.Frame;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;

/**
 *
 * @author Shaafi
 */
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

public class NewUserPicUploadForm extends javax.swing.JFrame {

    private String username, password;
    public String s;
    public byte[] imageArray;
    public boolean imageIsSelected = false;

    /**
     * Creates new form NewUserPicUploadForm
     */
    public NewUserPicUploadForm() {
        initComponents();
    }

    public void setUsernameAndPasswordForLogin(String username, String password) {
        this.username = username;
        this.password = password;
        setUsernameLable(username);
    }

    public String getUsername() {
        return username;
    }

    public String getPassword() {
        return password;
    }

    public void setUsernameLable(String username) {
        usernameLabel.setText(username);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        usernameTitle = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        userImageLabel = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        closing = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(730, 615));
        setMinimumSize(new java.awt.Dimension(730, 615));
        setName(""); // NOI18N
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(0, 153, 204));
        jButton1.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 24)); // NOI18N
        jButton1.setText("UPLOAD");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 530, 190, -1));

        usernameTitle.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 16)); // NOI18N
        usernameTitle.setForeground(new java.awt.Color(204, 204, 204));
        usernameTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        usernameTitle.setText("USERNAME");
        getContentPane().add(usernameTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 180, 40));

        usernameLabel.setFont(new java.awt.Font("Ravie", 0, 16)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(204, 204, 204));
        usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        usernameLabel.setText("USERNAME");
        getContentPane().add(usernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 180, 40));

        jButton2.setBackground(new java.awt.Color(0, 153, 153));
        jButton2.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 24)); // NOI18N
        jButton2.setText("BROWSE");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 530, -1, -1));

        userImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/image.png"))); // NOI18N
        getContentPane().add(userImageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 300, 300));

        minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        getContentPane().add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 40, 40));

        closing.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closing.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closingMouseClicked(evt);
            }
        });
        getContentPane().add(closing, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 10, 30, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/chat_bg.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // set the code to upload the pcture then login will activate
        //Sending The Image and checking if it's uploaded successfully
        if (sendImageToServer()) {
            
            JOptionPane.showMessageDialog(null, "Sign Up Finished!\nPlease Login in with your username and password!");
            
            new Login().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg", "gif", "png");
        fileChooser.addChoosableFileFilter(filter);
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            userImageLabel.setIcon(resizeImage(path));
            imageArray = convertImageIntoByteArray(path);
            //System.out.println(imageArray.length);
            imageIsSelected = true;
        } else if (result == JFileChooser.CANCEL_OPTION) {
            //System.out.println("No Data");
            imageIsSelected = false;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void closingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closingMouseClicked
                      close();         // TODO add your handling code here:
    }//GEN-LAST:event_closingMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
                 this.setState(Frame.ICONIFIED);           // TODO add your handling code here:
    }//GEN-LAST:event_minimizeMouseClicked

     public void close() {

        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
    public static byte[] convertImageIntoByteArray(String image) {
        File file = new File(image);
        byte[] buffer = new byte[(int) file.length()];
        try {
            FileInputStream fileInputStream = new FileInputStream(file);
            fileInputStream.read(buffer);
            return buffer;
        } catch (Exception e) {
            System.out.println(e);
            return null;
        }
    }

    public ImageIcon resizeImage(String imgPath) {
        ImageIcon MyImage = new ImageIcon(imgPath);
        Image img = MyImage.getImage();
        Image newImage = img.getScaledInstance(userImageLabel.getWidth(), userImageLabel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImage);
        return image;
    }

    public boolean sendImageToServer() {
        if (imageIsSelected) {
            try {
                System.out.println("in sendImage to server");
                //clientSocketForSignUpUser is static in Client Project there the close() function is commented out and here it's given
                return ClientProject.signUpImageUpload(username, password, imageArray);
            } catch (Exception e) {
                System.out.println("IN SEND IMAGE TO SERVER FUNCTION " + e.getMessage());
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "PLEASE SELECT AN IMAGE");
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewUserPicUploadForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewUserPicUploadForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewUserPicUploadForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewUserPicUploadForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewUserPicUploadForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel closing;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel minimize;
    private javax.swing.JLabel userImageLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel usernameTitle;
    // End of variables declaration//GEN-END:variables
}
